AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless API
Parameters:
  Environment:
    Type: String
    Description: Environment; dev, sit, stg, prod
    AllowedValues:
    - dev
    - sit
    - stg
    - prod
Resources:
  LoudChorusApiRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "LoudChorusApiApi-${Environment}"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  LoudChorusApiLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/lambda-entry-point.handler
      Runtime: nodejs12.x
      CodeUri: artifacts.zip
      MemorySize: 512
      Timeout: 900
      Role: !GetAtt LoudChorusApiRole.Arn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          NODE_ENV: !Ref Environment
  LoudChorusApiApi:
    Type: AWS::Serverless::Api
    DependsOn: LoudChorusApiLambda
    Properties:
      Name: !Sub "LoudChorusApiApi-${Environment}"
      StageName: !Ref Environment
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: openapi.yaml
      EndpointConfiguration: EDGE
  LoudChorusApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LoudChorusApiLambda
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LoudChorusApiApi}/${Environment}/*"
